// Code generated by mockery v2.52.2. DO NOT EDIT.

package mocks

import (
	context "context"

	models "github.com/UnknownOlympus/hephaestus/internal/models"
	mock "github.com/stretchr/testify/mock"
)

// EmployeeRepoIface is an autogenerated mock type for the EmployeeRepoIface type
type EmployeeRepoIface struct {
	mock.Mock
}

// GetEmployeeByID provides a mock function with given fields: ctx, identifier
func (_m *EmployeeRepoIface) GetEmployeeByID(ctx context.Context, identifier int) (models.Employee, error) {
	ret := _m.Called(ctx, identifier)

	if len(ret) == 0 {
		panic("no return value specified for GetEmployeeByID")
	}

	var r0 models.Employee
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, int) (models.Employee, error)); ok {
		return rf(ctx, identifier)
	}
	if rf, ok := ret.Get(0).(func(context.Context, int) models.Employee); ok {
		r0 = rf(ctx, identifier)
	} else {
		r0 = ret.Get(0).(models.Employee)
	}

	if rf, ok := ret.Get(1).(func(context.Context, int) error); ok {
		r1 = rf(ctx, identifier)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SaveEmployee provides a mock function with given fields: ctx, identifier, fullname, shortname, position, email, phone
func (_m *EmployeeRepoIface) SaveEmployee(ctx context.Context, identifier int, fullname string, shortname string, position string, email string, phone string) error {
	ret := _m.Called(ctx, identifier, fullname, shortname, position, email, phone)

	if len(ret) == 0 {
		panic("no return value specified for SaveEmployee")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int, string, string, string, string, string) error); ok {
		r0 = rf(ctx, identifier, fullname, shortname, position, email, phone)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateEmployee provides a mock function with given fields: ctx, identifier, fullname, shortname, position, email, phone
func (_m *EmployeeRepoIface) UpdateEmployee(ctx context.Context, identifier int, fullname string, shortname string, position string, email string, phone string) error {
	ret := _m.Called(ctx, identifier, fullname, shortname, position, email, phone)

	if len(ret) == 0 {
		panic("no return value specified for UpdateEmployee")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int, string, string, string, string, string) error); ok {
		r0 = rf(ctx, identifier, fullname, shortname, position, email, phone)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewEmployeeRepoIface creates a new instance of EmployeeRepoIface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEmployeeRepoIface(t interface {
	mock.TestingT
	Cleanup(func())
}) *EmployeeRepoIface {
	mock := &EmployeeRepoIface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
